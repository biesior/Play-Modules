# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index
GET     /browse                     controllers.Application.browse

# Authentication
GET     /authentication             controllers.Authentication.index
GET     /logout                     controllers.Authentication.logout
GET     /githubAuth                 controllers.Authentication.githubAuth
GET     /twitterAuth                controllers.Authentication.twitterAuth
GET     /googleAuth                 controllers.Authentication.googleAuth
GET     /openIdcallback             controllers.Authentication.openIDCallback


# Profile
GET     /profile/$id<[0-9]+>        controllers.Profile.index(id: Long)
GET     /profile/edit               controllers.Profile.edit()
POST    /profile/save               controllers.Profile.save()
GET     /profile/$userid<[0-9]+>/filter  controllers.Profile.filteredProfile(userid :Long, demoPage: Int ?= 0, demoOrderBy: Int ?= 1)

# Demos
GET     /demo/list                  controllers.Demos.listDemos(page: Int ?= 0, orderBy: Int ?= 1, filter: String ?= "")
GET     /demo/edit/:id              controllers.Demos.editDemo(id: Long)
POST    /demo/update/:id            controllers.Demos.updateDemo(id: Long)
GET     /demo/create/               controllers.Demos.createDemo()
POST    /demo/save/                 controllers.Demos.saveDemo()
POST    /demo/delete/               controllers.Demos.deleteDemo(id: Long)
GET     /demo/$id<[0-9]+>           controllers.Demos.viewDemo(id: Long)
POST    /demo/vote/$id<[0-9]+>      controllers.Demos.voteDemo(id: Long, vote: Int, oldVote: Int ?= 0)

# Administration
GET     /admin                      controllers.Administration.index()
GET     /admin/users                controllers.Administration.users()
GET     /admin/users/list/          controllers.Administration.listUsers(page: Int ?= 0, orderBy: Int ?= 1, filter: String ?= "")
GET     /admin/users/edit/:id       controllers.Administration.editUser(id: Long)
POST    /admin/users/update/:id       controllers.Administration.updateUser(id: Long)
GET     /admin/versions             controllers.Administration.versions()
GET     /admin/versions/list/          controllers.Administration.listVersions(page: Int ?= 0, orderBy: Int ?= 1, filter: String ?= "")
GET     /admin/versions/edit/:id       controllers.Administration.editVersion(id: Long)
POST    /admin/versions/update/:id       controllers.Administration.updateVersion(id: Long)
GET     /admin/versions/create/       controllers.Administration.createVersion()
POST    /admin/versions/save/       controllers.Administration.saveVersion()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

# Get favicon
GET     /favicon.ico         controllers.Assets.at(path="/public", file="/images/favicon.png")

# Robots and Humans files
GET     /$file<(robots|humans).txt>             controllers.Assets.at(path="/public", file)

# Flash policies
GET     /$file<crossdomain.xml>                 controllers.Assets.at(path="/public", file)

